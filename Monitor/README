Aby odpali� wrzuci� wara do folderu /webapps tomcata.
Albo oczywi�cie odpali� �r�d�a przy pomocy jakiego� ide.
Testowane na tomcacie 6.


Co zosta�o zrobione:
-Zrobiona zosta�a klasa Mesurment, kt�ra odpowiada jednemu pomiarowi(do wykorzystania w pomiarach z�o�onych).
	*getJSON() trzeba przerobi� metode getJSON jak si� dogadamy z sensorami co do ramek.
-Servlet kt�ry dzia�a jak interfejs RESTowy(albo tak mi si� przynajmniej wydaje).
	Aby zobaczy� dzia�anie servletu po odpaleniu aplikacji na serverze przej�� pod adres:
	[host:port]/[app_name]/Mesurments
	czyli np.:
	http://localhost:8080/Monitor/Measurements
	Zostanie wy�wietlona lista link�w do pomiar�w np.:
	http://localhost:8080/Monitor/Measurements?id=1

-Klasa SensorReciver odbiera dane z sensor�w. Jest odpalana jako osobny w�tek.
-Klasa MesurmentContainer to kontener na pomiary
	*metoda parseSensorData() b�dzie r�wnie� do zmiany jak sie dogadamy co do ramek.
	*widze ze jakies smieci sie wrzucaja do jsona, trzeba na to spojrze�
	
	
Z tego co pamietam mia�y by� dwa rodzaje ramek: jedna skr�cona zawieraj�ca tylko name, warto�� i date(data powinna przychodzi� z sensor�w bo narazie w aplikacji mamy date zapisania pomiaru w monitorze a nie wykonania go) oraz druga zawieraj�ca szczeg�owe dane.
Trzeba sie dogada� z sensorami co to za szczeg�owe dane i ewentualnie pododawa� pola do klasy Mesurment.
M�j pomys� jest taki aby wykorzysta� flage isInitialized.
Je�li otrzymamy pomiar od nowego sensora i jest to kr�tka ramka, to tworzymy Mesurment i zaznaczamy isInitialized na false, nast�pnie za ka�dym razem gy przyjdzie rozszerzona ramka sprawdzamy flage i ewentualnie dogryamy dane.
Je�li od razu przyjdzie rozszerzona ramka to nie ma problemu.
